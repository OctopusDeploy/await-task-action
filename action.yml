name: 'Wait/watch an execution task in Octopus Deploy'
description: 'GitHub Action to wait/watch an execution task in Octopus Deploy'
author: 'Octopus Deploy'
branding:
  color: 'blue'
  icon: 'package'

inputs:
  server_task_id:
    description: 'The execution task ID to watch/wait for.'
    required: true
  polling_interval:
    default: 10
    description: 'How frequently, in seconds, to check the status.'
  timeout_after:
    default: 600
    description: 'Duration, in seconds, to allow for completion before timing out.'
  hide_progress:
    default: false
    description: 'Whether to hide the progress of the task.'
  server:
    description: 'The instance URL hosting Octopus Deploy (i.e. "https://octopus.example.com/"). The instance URL is required, but you may also use the OCTOPUS_URL environment variable.'
  api_key:
    description: 'The API key used to access Octopus Deploy. One of API key or Access Token are required, but you may also use the OCTOPUS_API_KEY environment variable. It is strongly recommended that this value retrieved from a GitHub secret.'
  access_token:
    description: 'The access token used to access Octopus Deploy. One of API key or Access Token are required, to obtain an access token please use the `OctopusDeploy/login` action. You may also use the OCTOPUS_ACCESS_TOKEN environment variable if you are obtaining a token another way.'
  space:
    description: 'The name of a space within which this command will be executed. The space name is required, but you may also use the OCTOPUS_SPACE environment variable.'

outputs:
  task_state:
    description: 'The final TaskState (Canceled, Failed, Success, or TimedOut) returned from Octopus, or undefined if Octopus could not be contacted to retrieve the state. '

runs:
  using: 'node16'
  main: 'dist/index.js'
